<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="c:\Logs\internal-nlog.txt">

  <extensions>
    <add assembly="EPLApp.Api"/>
  </extensions>

  <target xsi:type="File" name="FileTrace" fileName="c:\Logs\Bank-Api\Trace ${shortdate}.log"
             layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|  ${message} ${exception}" />

  <target xsi:type="File" name="FileDebug" fileName="c:\Logs\Bank-Api\Debug ${shortdate}.log"
             layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|  ${message} ${exception}" />

  <target xsi:type="File" name="FileWarn" fileName="c:\Logs\Bank-Api\Warn ${shortdate}.log"
             layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|  ${message} ${exception}" />

  <target xsi:type="File" name="FileError" fileName="c:\Logs\Bank-Api\Error ${shortdate}.log"
             layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|  ${message} ${exception}" />


  <!-- define various log targets -->
  <targets>
    <target xsi:type="Null" name="blackhole" />

    <target xsi:type="RoundRobinGroup" name="LogServiceLoadBalancing">
      <target xsi:type="RestApi"
					name="LoggingService"
					url="https://yourloggingserviceurl.com"
					encoding="UTF-8"
					protocol="JsonPost"
					authorizationParameter="authorization"
              >

        <parameter name="application" layout="ePlatform Mobile" type="System.String"/>
        <parameter name="machineName" layout="${machinename}" type="System.String"/>
        <parameter name="level" layout="${level}" type="System.String"/>
        <parameter name="message" layout="${message}" type="System.String"/>
        <parameter name="exception" layout="${exception:format=Type}" type="System.String"/>
        <parameter name="stackTrace" layout="${exception:format=ToString}" type="System.String"/>
        <parameter name="logged" layout="${date:universalTime=true:format:o}" type="System.DateTime"/>
        <parameter name="logger" layout="${logger}" type="System.String"/>
        <parameter name="callSite" layout="${callsite:filename=false}" type="String"/>
        <parameter name="userAgent" layout="${aspnet-request-useragent}" type="String"/>
        <parameter name="requestId" layout="${aspnet-request-token}" type="String"/>
        <parameter name="authorization" layout="${aspnet-request-authorization}" type="String"/>

        <!-- repeated -->
      </target>
    </target>

  </targets>

  <rules>
    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" maxlevel="Warn" writeTo="blackhole" final="true" />
    <logger name="IdentityServer4.*" minlevel="Trace" maxlevel="Warn" writeTo="blackhole" final="true" />

    <!--Info, Trace, Debug, Warn, Error-->
    <logger name="*" minLevel="Trace" writeTo="LogServiceLoadBalancing" >
      <filters defaultAction="Log">
        <!--Ignore something looks like double logging when IIS act as reverse proxy in front of Kestrel-->
        <when condition="equals('${logger}','Microsoft.AspNetCore.Server.Kestrel') and starts-with('${message}','Connection id') and ends-with('${message}','An unhandled exception was thrown by the application.')" action="Ignore" />
        <!--Ignore log for IIS fail to start Kestrel whenever port is in use. IIS will start another instant at different port.-->
        <when condition="equals('${logger}','Microsoft.AspNetCore.Server.Kestrel') and starts-with('${message}','Unable to start Kestrel') and equals('${exception:format=Type}','System.IO.IOException') and contains('${exception:format=ToString}','Failed to bind to address') and contains('${exception:format=ToString}','port already in use')" action="Ignore" />
        <!--Ignore benign UvException "Error -4095" from Kestrel when Listner read the EOF.-->
        <when condition="equals('${logger}','Microsoft.AspNetCore.Server.Kestrel') and starts-with('${message}','ListenerPrimary.ReadCallback') and contains('${exception:format=ToString}','UvException: Error -4095 EOF end of file')" action="Ignore" />
      </filters>
    </logger>
  </rules>
</nlog>